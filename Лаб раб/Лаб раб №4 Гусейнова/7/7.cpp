// 7.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
//
													// НЕ ЗАКОНЧЕН
//
#include <iostream>
#include <vector>

/*7. Написать функцию, которая производит двоичный поиск 
места размещения нового элемента в упорядоченном массиве 
и возвращает  место включения нового элемента. 
С помощью данной функции реализовать сортировку вставками. */

using std::cout;
using std::cin;
using std::vector;

void insertion(vector<int>&);
void initVector(std::vector<int>& v, int range);
void printVector(std::vector<int> v)

int main()
{
    cout << ""
}

void insertion(vector<int>& v)
{
	for (size_t i = 0; i < v.size(); i++)
	{
		int j = i - 1;
		int key = v[i];
		while ((v[j] > v[key]) && (j >= 0))
		{
			v[j + 1] = v[j];
			j -= 1;
		}
		v[j + 1] = key;
	}
}

void initVector(std::vector<int>& v, int range)
{
	for (size_t i = 0; i < v.size(); i++)
	{
		//v[i] = rand() % range;
		std::cin >> v[i];
	}
}

void printVector(std::vector<int> v)
{
	for (size_t i = 0; i < size(v); i++)
	{
		std::cout << v[i] << "\t";
	}
	std::cout << "\n";
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
